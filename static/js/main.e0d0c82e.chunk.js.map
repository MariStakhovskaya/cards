{"version":3,"sources":["components/header/Header.module.css","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","pages/error404/Error404.module.css","components/common/c1-SuperInput/SuperInput.module.css","components/common/c2-SuperButton/SuperButton.module.css","pages/test/Test.module.css","redux/loginReducer.ts","redux/registrationReducer.ts","redux/profileReducer.ts","redux/recoverPasswordReducer.ts","redux/newPasswordReducer.ts","redux/store.ts","components/common/c1-SuperInput/SuperInput.tsx","components/common/c2-SuperButton/SuperButton.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","pages/test/Test.tsx","pages/login/Login.tsx","pages/newPassword/NewPassword.tsx","pages/profile/Profile.tsx","pages/registration/Registration.tsx","pages/error404/404.png","pages/error404/Error404.tsx","pages/recoverPassword/RecoverPassword.tsx","components/routes/Routes.tsx","components/header/Header.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","initialState","rootReducer","combineReducers","login","state","registration","profile","recoverPassword","newPassword","store","createStore","applyMiddleware","thunk","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","value","superInput","errorInput","e","currentTarget","key","SuperButton","green","finalClassName","default","red","SuperCheckbox","onChangeChecked","children","checkbox","container","checked","checkmark","Test","content","SuperInput","Login","NewPassword","Profile","Registration","Error404","wrapper","image","src","image404","alt","errorText","to","PATH","PROFILE","back","RecoverPassword","LOGIN","NEW_PASSWORD","REGISTRATION","PASSWORD_RECOVERY","TEST_COMPONENT","ERROR_404","Routes","path","exact","render","from","Header","activeClassName","active","navItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0d0c82e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2u-x0\",\"navItem\":\"Header_navItem__3qSRn\",\"active\":\"Header_active__1fnU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperCheckbox_container__2vcYT\",\"checkmark\":\"SuperCheckbox_checkmark__3YnMj\",\"checkbox\":\"SuperCheckbox_checkbox__2O8qU\",\"spanClassName\":\"SuperCheckbox_spanClassName__2VpPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__k-AK0\",\"image\":\"Error404_image__ZcLo_\",\"errorText\":\"Error404_errorText__10FK6\",\"back\":\"Error404_back__3MMaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__3qOlB\",\"errorInput\":\"SuperInput_errorInput__2Mtvn\",\"error\":\"SuperInput_error__193Nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__36kDU\",\"red\":\"SuperButton_red__27BdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Test_content__1W_TK\"};","type initialStateType = {\r\n\r\n}\r\nexport type ActionsType = {\r\n\r\n}\r\nconst initialState:initialStateType = {\r\n\r\n}\r\n\r\n\r\n\r\nexport const loginReducer = (state:initialStateType=initialState, action:ActionsType):initialStateType => {\r\n\r\n    return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","type initialStateType = {\r\n\r\n}\r\nexport type ActionsType = {\r\n\r\n}\r\nconst initialState:initialStateType = {\r\n\r\n}\r\n\r\n\r\n\r\nexport const registrationReducer = (state:initialStateType=initialState, action:ActionsType):initialStateType => {\r\n\r\n            return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","type initialStateType = {\r\n\r\n}\r\nexport type ActionsType = {\r\n\r\n}\r\nconst initialState:initialStateType = {\r\n\r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (state:initialStateType=initialState, action:ActionsType):initialStateType => {\r\n\r\n    return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","type initialStateType = {\r\n\r\n}\r\nexport type ActionsType = {\r\n\r\n}\r\nconst initialState:initialStateType = {\r\n\r\n}\r\n\r\n\r\n\r\nexport const recoverPasswordReducer = (state:initialStateType=initialState, action:ActionsType):initialStateType => {\r\n\r\n    return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","type initialStateType = {\r\n\r\n}\r\nexport type ActionsType = {\r\n\r\n}\r\nconst initialState:initialStateType = {\r\n\r\n}\r\n\r\n\r\n\r\nexport const newPasswordReducer = (state:initialStateType=initialState, action:ActionsType):initialStateType => {\r\n\r\n    return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {recoverPasswordReducer} from \"./recoverPasswordReducer\";\r\nimport {newPasswordReducer} from \"./newPasswordReducer\";\r\n\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n\r\n})\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = restProps.value ? s.superInput : s.errorInput; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    green?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        green, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${green ? s.default : s.red} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.container}>\r\n            <input\r\n\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.checkmark}></span>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React from 'react'\r\nimport s from './Test.module.css'\r\nimport SuperInput from \"../../components/common/c1-SuperInput/SuperInput\";\r\nimport SuperButton from \"../../components/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../components/common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div><SuperInput /></div>\r\n            <div><SuperCheckbox /></div>\r\n\r\n            <div>\r\n            <SuperButton green >Кнопка</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Login.module.css\"\r\n\r\n\r\n const Login = () =>  {\r\n    return (\r\n        <div className={s.container}>\r\n             Здесь будет страница логинизации\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport s from \"./NewPassword.module.css\"\r\n\r\n\r\n const NewPassword = () =>  {\r\n    return (\r\n        <div className={s.container}>\r\n             Здесь будет страница введения нового пароля\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewPassword;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\n\r\n\r\n const Profile = () =>  {\r\n    return (\r\n        <div className={s.container}>\r\n             Здесь будет страница профиля\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport s from \"./Registration.module.css\"\r\n\r\n\r\n const Registration = () =>  {\r\n    return (\r\n        <div className={s.container}>\r\n             Здесь будет страница регистрации\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","export default __webpack_public_path__ + \"static/media/404.e6e698f1.png\";","import React from \"react\";\r\nimport s from \"./Error404.module.css\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport image404 from \"./404.png\"\r\nimport {PATH} from \"../../components/routes/Routes\";\r\nimport SuperButton from \"../../components/common/c2-SuperButton/SuperButton\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.image}><img src={image404}\r\n                                          alt=\"cat\"/></div>\r\n            <div className={s.errorText}>Oops, This page does not exist</div>\r\n            <SuperButton><NavLink to={PATH.PROFILE} className={s.back}>go to profile</NavLink></SuperButton>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n\r\n","import React from \"react\";\r\nimport s from \"./RecoverPassword.module.css\"\r\n\r\n\r\n const RecoverPassword = () =>  {\r\n    return (\r\n        <div className={s.container}>\r\n             Здесь будет страница регистрации\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecoverPassword;\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Test} from \"../../pages/test/Test\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport NewPassword from \"../../pages/newPassword/NewPassword\";\r\nimport Profile from \"../../pages/profile/Profile\";\r\nimport Registration from \"../../pages/registration/Registration\";\r\nimport Error404 from \"../../pages/error404/Error404\";\r\nimport RecoverPassword from \"../../pages/recoverPassword/RecoverPassword\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    NEW_PASSWORD: '/new-password/',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/recover_password',\r\n    TEST_COMPONENT: '/testComponent',\r\n    ERROR_404: '/404',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу LOGIN*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login />}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration />}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword />}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile />}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={() => <RecoverPassword />}/>\r\n                <Route exact path={PATH.TEST_COMPONENT} render={() => <Test />}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error404 />}/>\r\n                <Redirect from={'*'} to={PATH.ERROR_404}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\"\r\nimport {PATH} from \"../routes/Routes\";\r\nexport const Header = () => {\r\n    return (\r\n\r\n        <div className={s.container}>\r\n        <NavLink to={PATH.LOGIN} activeClassName={s.active} className={s.navItem}>login</NavLink>\r\n        <NavLink to={PATH.REGISTRATION} className={s.navItem} activeClassName={s.active}>registration</NavLink>\r\n        <NavLink to={PATH.PROFILE} className={s.navItem} activeClassName={s.active}>profile</NavLink>\r\n        <NavLink to={PATH.NEW_PASSWORD} className={s.navItem} activeClassName={s.active}>New Password</NavLink>\r\n        <NavLink to={PATH.PASSWORD_RECOVERY} className={s.navItem} activeClassName={s.active}>Recovery password</NavLink>\r\n        <NavLink to={PATH.TEST_COMPONENT} className={s.navItem} activeClassName={s.active}>test</NavLink>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Provider} from \"react-redux\";\nimport { HashRouter } from 'react-router-dom';\nimport {store} from \"../redux/store\";\nimport {Header} from \"../components/header/Header\";\nimport Routes from \"../components/routes/Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n            <HashRouter>\n                <Header/>\n                <Routes />\n            </HashRouter>\n        </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}